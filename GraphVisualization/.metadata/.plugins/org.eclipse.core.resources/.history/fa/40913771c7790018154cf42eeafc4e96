package undoredo;

import java.util.HashMap;
import java.util.Map;

import javax.swing.undo.AbstractUndoableEdit;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;

import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import visualize.Edge;
import visualize.Graph;
import visualize.NotExistException;

public class NodeRedelete extends AbstractUndoableEdit {
	
	private Map<String,Edge> edges;
	private String id;
	private int degree;
	private Color color;
	private double size;
	private String label;
	private Graph graph;
	HashMap<String,Color> colors;
	HashMap<String,String> labels;
	
	
	public NodeRedelete(Graph g,String idd,int dgr,Color col,double siz,String lab,HashMap<String,Color>clrs,HashMap<String,String>lbls) {
		
		graph=g; id=idd; degree=dgr; color=col; size=siz; label=lab; colors=clrs; labels=lbls;
		
	}
	
	@Override
	public void redo() throws CannotRedoException {
		
		try {
			
			graph.removeNode(id);
			
		}catch(NotExistException e) {
			
			
		}
		
	}
	
	
	@Override
	public void undo() throws CannotUndoException {
	
		try {
			
		}
		
	}

}
